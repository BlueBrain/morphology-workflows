[base]
name = morphology_workflows
files = src/{[base]name} tests docs/source/conf.py setup.py examples

[tox]
envlist =
    check-packaging
    lint
    docs
    min_versions
    py{310,311,312}

minversion = 3.18

[testenv]
extras =
    graphviz
    mouselight
    test
setenv =
    COVERAGE_FILE = {env:COVERAGE_FILE:.coverage-{envname}}
    HDF5_USE_FILE_LOCKING = FALSE
commands =
    pytest \
        --basetemp={envtmpdir} \
        --cov={[base]name} \
        --cov-branch \
        --cov-fail-under=64 \
        --no-cov-on-fail \
        --cov-report term-missing \
        --cov-report html:reports/coverage-{envname} \
        --cov-report xml:reports/coverage-{envname}.xml \
        --html reports/pytest-{envname}.html \
        --junit-xml=reports/pytest-{envname}.xml \
        --self-contained-html \
        --dcd-export-formatted-data \
        {posargs}

[testenv:coverage]
skip_install = true
deps = coverage
allowlist_externals = /bin/bash
commands =
    /bin/bash -c 'coverage combine .coverage-py*'
    coverage xml
    coverage report

[testenv:check-packaging]
skip_install = true
deps =
    build
    twine
commands =
    python -m build -o {envtmpdir}/dist
    twine check {envtmpdir}/dist/*

[testenv:min_versions]
basepython = python3.10
deps =
    Requirements-Builder
commands_pre =
    requirements-builder --level=min --extras=test -o {envtmpdir}/requirements_min.txt setup.py
    pip install -r {envtmpdir}/requirements_min.txt
    pip freeze

[testenv:lint]
basepython = python3.10
deps =
    pre-commit
    pylint
commands =
    pre-commit run --all-files --show-diff-on-failure
    pylint -j {env:PYLINT_NPROCS:1} {[base]files}

[testenv:format]
basepython = python3.10
skip_install = true
deps =
    codespell
    pre-commit
commands =
    codespell -i 3 -x .codespellignorelines -w {[base]files} README.md CHANGELOG.md docs/source
    pre-commit run --all-files

[testenv:docs]
changedir = docs
extras =
    docs
    mouselight
allowlist_externals =
    make
    dot
# set warnings as errors using the -W sphinx option
commands =
    make clean
    make html SPHINXOPTS=-W

[gh-actions]
python =
  3.10: py310, lint
  3.11: py311, check-packaging
  3.12: py312, docs
